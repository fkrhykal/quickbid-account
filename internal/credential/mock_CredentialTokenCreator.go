// Code generated by mockery v2.51.1. DO NOT EDIT.

package credential

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockCredentialTokenCreator is an autogenerated mock type for the CredentialTokenCreator type
type MockCredentialTokenCreator struct {
	mock.Mock
}

type MockCredentialTokenCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCredentialTokenCreator) EXPECT() *MockCredentialTokenCreator_Expecter {
	return &MockCredentialTokenCreator_Expecter{mock: &_m.Mock}
}

// CreateCredentialToken provides a mock function with given fields: ctx, userCredential
func (_m *MockCredentialTokenCreator) CreateCredentialToken(ctx context.Context, userCredential *UserCredential) (string, error) {
	ret := _m.Called(ctx, userCredential)

	if len(ret) == 0 {
		panic("no return value specified for CreateCredentialToken")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *UserCredential) (string, error)); ok {
		return rf(ctx, userCredential)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *UserCredential) string); ok {
		r0 = rf(ctx, userCredential)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *UserCredential) error); ok {
		r1 = rf(ctx, userCredential)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockCredentialTokenCreator_CreateCredentialToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateCredentialToken'
type MockCredentialTokenCreator_CreateCredentialToken_Call struct {
	*mock.Call
}

// CreateCredentialToken is a helper method to define mock.On call
//   - ctx context.Context
//   - userCredential *UserCredential
func (_e *MockCredentialTokenCreator_Expecter) CreateCredentialToken(ctx interface{}, userCredential interface{}) *MockCredentialTokenCreator_CreateCredentialToken_Call {
	return &MockCredentialTokenCreator_CreateCredentialToken_Call{Call: _e.mock.On("CreateCredentialToken", ctx, userCredential)}
}

func (_c *MockCredentialTokenCreator_CreateCredentialToken_Call) Run(run func(ctx context.Context, userCredential *UserCredential)) *MockCredentialTokenCreator_CreateCredentialToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*UserCredential))
	})
	return _c
}

func (_c *MockCredentialTokenCreator_CreateCredentialToken_Call) Return(_a0 string, _a1 error) *MockCredentialTokenCreator_CreateCredentialToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockCredentialTokenCreator_CreateCredentialToken_Call) RunAndReturn(run func(context.Context, *UserCredential) (string, error)) *MockCredentialTokenCreator_CreateCredentialToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCredentialTokenCreator creates a new instance of MockCredentialTokenCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCredentialTokenCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCredentialTokenCreator {
	mock := &MockCredentialTokenCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
