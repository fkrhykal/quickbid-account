// Code generated by mockery v2.51.1. DO NOT EDIT.

package credential

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockUserCredentialRetriever is an autogenerated mock type for the UserCredentialRetriever type
type MockUserCredentialRetriever struct {
	mock.Mock
}

type MockUserCredentialRetriever_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUserCredentialRetriever) EXPECT() *MockUserCredentialRetriever_Expecter {
	return &MockUserCredentialRetriever_Expecter{mock: &_m.Mock}
}

// RetrieveUserCredential provides a mock function with given fields: ctx, token
func (_m *MockUserCredentialRetriever) RetrieveUserCredential(ctx context.Context, token string) (*UserCredential, error) {
	ret := _m.Called(ctx, token)

	if len(ret) == 0 {
		panic("no return value specified for RetrieveUserCredential")
	}

	var r0 *UserCredential
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*UserCredential, error)); ok {
		return rf(ctx, token)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *UserCredential); ok {
		r0 = rf(ctx, token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*UserCredential)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockUserCredentialRetriever_RetrieveUserCredential_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RetrieveUserCredential'
type MockUserCredentialRetriever_RetrieveUserCredential_Call struct {
	*mock.Call
}

// RetrieveUserCredential is a helper method to define mock.On call
//   - ctx context.Context
//   - token string
func (_e *MockUserCredentialRetriever_Expecter) RetrieveUserCredential(ctx interface{}, token interface{}) *MockUserCredentialRetriever_RetrieveUserCredential_Call {
	return &MockUserCredentialRetriever_RetrieveUserCredential_Call{Call: _e.mock.On("RetrieveUserCredential", ctx, token)}
}

func (_c *MockUserCredentialRetriever_RetrieveUserCredential_Call) Run(run func(ctx context.Context, token string)) *MockUserCredentialRetriever_RetrieveUserCredential_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockUserCredentialRetriever_RetrieveUserCredential_Call) Return(_a0 *UserCredential, _a1 error) *MockUserCredentialRetriever_RetrieveUserCredential_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockUserCredentialRetriever_RetrieveUserCredential_Call) RunAndReturn(run func(context.Context, string) (*UserCredential, error)) *MockUserCredentialRetriever_RetrieveUserCredential_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUserCredentialRetriever creates a new instance of MockUserCredentialRetriever. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUserCredentialRetriever(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUserCredentialRetriever {
	mock := &MockUserCredentialRetriever{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
